/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SEQKIT_SLIDING {
        ext.args = {"-s ${meta.sliding} -W ${meta.window} "}
    }

    withName: BLAST_CHUNK_TO_FULL {
        ext.args = 'nucleotide'
    }

    withName: BLAST_BLASTN {
        ext.args = { "-outfmt '6 qseqid staxids bitscore std' -max_target_seqs 10 -max_hsps 1 -evalue 1e-25 -dust yes -lcase_masking" }
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: SAMTOOLS_DEPTH{
        ext.args = { "-aa" }
    }

    withName: SAMTOOLS_SORT{
        ext.prefix  = { "${meta.id}_sorted" }
    }
    
    withName: KRAKEN2_KRAKEN2 {
        ext.args = { "--report-zero-counts --use-names --memory-mapping" }
    }

    withName: FCS_FCSADAPTOR_PROK {
        ext.args    = "--prok"
        ext.prefix  = { "${meta.id}_prok" }
    }

    withName: FCS_FCSADAPTOR_EUK {
        ext.args    = "--euk"
        ext.prefix  = { "${meta.id}_euk" }
    }

    withName: '.*:.*:GENERATE_GENOME:GNU_SORT' {
        ext.prefix  = { "${meta.id}_sorted"}
        ext.args    = { '-k2,2 -nr' }
    }

    withName: MINIMAP2_ALIGN_HIFI {
            ext.args = { '-ax map-hifi --cs=short' + (reference.size() > 4294967296 ? (" -I" + Math.ceil(reference.size()/1073741824)+"G") : "") }
            ext.prefix  = { "${meta.id}_alignment_${reference.getName().tokenize('.')[0]}" }
    }

    withName: MINIMAP2_ALIGN_CLR {
            ext.args = { '-ax map-pb --cs=short' + (reference.size() > 4294967296 ? (" -I" + Math.ceil(reference.size()/1073741824)+"G") : "") }
            ext.prefix  = { "${meta.id}_alignment_${reference.getName().tokenize('.')[0]}" }
    }

    withName: MINIMAP2_ALIGN_ONT {
            ext.args = { '-ax map-ont --cs=short' + (reference.size() > 4294967296 ? (" -I" + Math.ceil(reference.size()/1073741824)+"G") : "") }
            ext.prefix  = { "${meta.id}_alignment_${reference.getName().tokenize('.')[0]}" }
    }

}
