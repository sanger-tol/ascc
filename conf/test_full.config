/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file for running minimal tests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Defines input files and everything required to run a fast and simple pipeline test.

    Use as follows:
        nextflow run sanger-tol/ascc -profile test,<docker/singularity> --outdir <OUTDIR>

----------------------------------------------------------------------------------------
*/

process {
    resourceLimits = [
        cpus: 4,
        memory: '10.GB',
        time: '1.h'
    ]
}

params {
    config_profile_name        = 'Test profile'
    config_profile_description = 'Minimal test dataset to check pipeline function'

    // Limit resources so that this can run on GitHub Actions
    max_cpus   = 4
    max_memory = '10.GB'
    max_time   = '6.h'

    // Input params
    outdir                              = "ASCC-FULL-TEST"

    input                               = "${baseDir}/assets/farm_testing/samplesheet.csv"

    // Input data normally in
    reads_path                          = ["${baseDir}/asccTinyTest_V2/pacbio/Pyoeliiyoelii17XNL_pbtools_simulated_pacbio_reads.fa.gz"]
    reads_type                          = "hifi"
    reads_layout                        = "SINGLE"
    pacbio_barcode_file                 = "${projectDir}/assets/ascc_database_fasta/pacbio_adaptors.fa"
    pacbio_barcode_names                = "bc2009,bc2010,bc2009"
    sample_id                           = "Pyoeliiyoelii17XNL"
    scientific_name                     = "Plasmodium yoelii yoelii 17XNL"
    taxid                               = 352914
    kmer_length                         = 7
    dimensionality_reduction_methods    = ["pca", "random_trees"]
    // all available methods
    // "pca,umap,t-sne,isomap,lle_standard,lle_hessian,lle_modified,mds,se,random_trees,kernel_pca,pca_svd,autoencoder_sigmoid,autoencoder_linear,autoencoder_selu,autoencoder_relu,nmf"
    nt_database_path                    = "/data/tol/resources/nt/latest/"
    nt_database_prefix                  = "nt"
    nt_kraken_database_path             = "/lustre/scratch122/tol/resources/nt_kraken2/latest"
    ncbi_taxonomy_path                  = "/lustre/scratch122/tol/resources/taxonomy/latest/new_taxdump"
    ncbi_ranked_lineage_path            = "/lustre/scratch122/tol/resources/taxonomy/latest/new_taxdump/rankedlineage.dmp"
    busco_lineages_folder               = "/lustre/scratch122/tol/resources/busco/latest/"
    busco_lineages                      = "diptera_odb10,insecta_odb10"
    fcs_gx_database_path                = "/lustre/scratch124/tol/projects/asg/sub_projects/ncbi_decon/0.4.0/gxdb/"
    vecscreen_database_path             = "/data/tol/resources/ascc_vecscreen/"
    diamond_uniprot_database_path       = "/lustre/scratch122/tol/resources/uniprot_reference_proteomes/latest/reference_proteomes.dmnd"
    diamond_nr_database_path            = "/lustre/scratch122/tol/resources/nr/latest/nr.dmnd"
    seqkit_sliding                      = 100000
    seqkit_window                       = 6000
    n_neighbours                        = 13

    run_essentials                      = "both"    // both
    run_kmers                           = "off" // genomic
    run_tiara                           = "off"    // both
    run_coverage                        = "off"    // both
    run_nt_blast                        = "off"    // both
    run_nr_diamond                      = "off"    // both
    run_uniprot_diamond                 = "off"    // both
    run_kraken                          = "off"    // both
    run_fcsgx                           = "off"    // both
    run_fcs_adaptor                     = "off"    // both
    run_vecscreen                       = "off"    // both
    run_btk_busco                       = "off" // genomic
    run_pacbio_barcodes                 = "both"    // both
    run_organellar_blast                = "off" // genomic
    run_autofilter_assembly             = "off"    // both
    run_create_btk_dataset              = "off"    // both
    run_merge_datasets                  = "off" // genomic

}
