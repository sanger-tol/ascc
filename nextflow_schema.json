{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/sanger-tol/ascc/master/nextflow_schema.json",
    "title": "sanger-tol/ascc pipeline parameters",
    "description": "Assembly Screen for Cobionts and Contaminants",
    "type": "object",
    "$defs": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row. See [usage docs](https://pipelines.tol.sanger.ac.uk/ascc/0.3.0/usage).",
                    "fa_icon": "fas fa-file-csv"
                },
                "scientific_name": {
                    "type": "string",
                    "description": "Scientific name of sample according to NCBI",
                    "fa_icon": "fas fa-input-text"
                },
                "sample_id": {
                    "type": "string",
                    "description": "Sample ID",
                    "fa_icon": "fas fa-input-text"
                },
                "taxid": {
                    "type": "integer",
                    "description": "TaxID according to NCBI",
                    "fa_icon": "fas fa-hastag"
                },
                "reads_path": {
                    "type": "array",
                    "description": "Array of files containing long read data in gzipped FASTA format.",
                    "fa_icon": "fas fa-file-lines"
                },
                "reads_type": {
                    "type": "string",
                    "description": "Type of read (hifi)",
                    "fa_icon": "fas fa-input-text",
                    "default": "hifi",
                    "enum": ["hifi", "clr", "ont", "illumina"]
                },
                "reads_layout": {
                    "type": "string",
                    "description": "Specify whether all reads are SINGLE or PAIRED end reads",
                    "enum": ["SINGLE", "PAIRED"],
                    "fa_icon": "fas fa-input-text",
                    "default": "SINGLE"
                },
                "pacbio_barcode_file": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/fasta",
                    "pattern": "^\\S+\\.fa$",
                    "description": "Fasta format file containing barcode data",
                    "fa_icon": "fas fa-file-lines"
                },
                "pacbio_barcode_names": {
                    "type": "string",
                    "description": "Comma-separated list of multiplexing barcodes used across the sequencing runs that generated the assembly.",
                    "fa_icon": "fas fa-input-text"
                },
                "kmer_length": {
                    "type": "number",
                    "description": "Length of kmer to use in run",
                    "fa_icon": "fas fa-hashtag",
                    "default": 7
                },
                "dimensionality_reduction_methods": {
                    "type": "array",
                    "description": "dimensionality_reduction_methods to use in runs",
                    "fa_icon": "fas fa-input-text"
                },
                "nt_database_path": {
                    "type": "string",
                    "description": "folder containing nt database",
                    "fa_icon": "fas fa-folder"
                },
                "nt_database_prefix": {
                    "type": "string",
                    "description": "Prefix of the NT database",
                    "fa_icon": "fas fa-input-text"
                },
                "nt_kraken_database_path": {
                    "type": "string",
                    "description": "folder containing Kraken2 database",
                    "fa_icon": "fas fa-folder"
                },
                "ncbi_taxonomy_path": {
                    "type": "string",
                    "description": "folder containing dmp files",
                    "fa_icon": "fas fa-folder"
                },
                "ncbi_ranked_lineage_path": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "pattern": "^\\S+\\.dmp$",
                    "description": "Path to rankedlineage.dmp",
                    "fa_icon": "fas fa-file-lines"
                },
                "busco_lineages_folder": {
                    "type": "string",
                    "description": "BUSCO folder containing busco Lineages folder",
                    "fa_icon": "fas fa-folder"
                },
                "busco_lineages": {
                    "type": "string",
                    "description": "CSV list of lineages to use in run",
                    "fa_icon": "fas fa-input-text"
                },
                "fcs_gx_database_path": {
                    "type": "string",
                    "description": "FCS_GX folder containing database",
                    "fa_icon": "fas fa-folder"
                },
                "vecscreen_database_path": {
                    "type": "string",
                    "description": "Vecscreen folder containing database",
                    "fa_icon": "fas fa-folder"
                },
                "diamond_uniprot_database_path": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "pattern": "^\\S+\\.dmnd$",
                    "description": "Path to Uniprot Diamond DB",
                    "fa_icon": "fas fa-file-lines"
                },
                "diamond_nr_database_path": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "pattern": "^\\S+\\.dmnd$",
                    "description": "Path to NR Diamond DB",
                    "fa_icon": "fas fa-file-lines"
                },
                "seqkit_sliding": {
                    "type": "integer",
                    "description": "Length of slide for Seqkit",
                    "fa_icon": "fas fa-hashtag",
                    "default": 100000
                },
                "seqkit_window": {
                    "type": "integer",
                    "description": "Length of the window for Seqkit",
                    "fa_icon": "fas fa-hashtag",
                    "default": 6000
                },
                "n_neighbours": {
                    "type": "integer",
                    "description": "Nearest Neighbour value - This is for the dimensional reduction of kmer counts (UMAP and t-SNE).",
                    "fa_icon": "fas fa-hashtag",
                    "default": 13
                },
                "filter_cutoff": {
                    "type": "integer",
                    "description": "The length cutoff for the input fasta, scaffolds longer than this limit will be removed from analysis.",
                    "fa_icon": "fas fa-hashtag",
                    "default": 1900000000,
                    "minimum": 0,
                    "maximum": 1900000000
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "run_essentials": {
                    "type": "string",
                    "description": "Run essential jobs on assebmlies",
                    "enum": ["genomic", "organellar", "both", "off"],
                    "default": "both"
                },
                "run_kmers": {
                    "type": "string",
                    "description": "Run kmer jobs on assebmlies",
                    "enum": ["genomic", "both", "off"],
                    "default": "genomic"
                },
                "run_tiara": {
                    "type": "string",
                    "description": "Run tiara jobs on assebmlies",
                    "enum": ["genomic", "organellar", "both", "off"],
                    "default": "both"
                },
                "run_coverage": {
                    "type": "string",
                    "description": "Run coverage jobs on assebmlies",
                    "enum": ["genomic", "organellar", "both", "off"],
                    "default": "both"
                },
                "run_nt_blast": {
                    "type": "string",
                    "description": "Run nt_blast jobs on assebmlies",
                    "enum": ["genomic", "organellar", "both", "off"],
                    "default": "both"
                },
                "run_html_report": {
                    "type": "string",
                    "description": "Run HTML report generation on assemblies",
                    "enum": ["genomic", "organellar", "both", "off"],
                    "default": "off"
                },
                "run_nr_diamond": {
                    "type": "string",
                    "description": "Run nr_diamond jobs on assebmlies",
                    "enum": ["genomic", "organellar", "both", "off"],
                    "default": "both"
                },
                "run_uniprot_diamond": {
                    "type": "string",
                    "description": "Run uniprot_diamond jobs on assebmlies",
                    "enum": ["genomic", "organellar", "both", "off"],
                    "default": "both"
                },
                "run_kraken": {
                    "type": "string",
                    "description": "Run kraken jobs on assebmlies",
                    "enum": ["genomic", "organellar", "both", "off"],
                    "default": "both"
                },
                "run_fcsgx": {
                    "type": "string",
                    "description": "Run fcsgx jobs on assebmlies",
                    "enum": ["genomic", "organellar", "both", "off"],
                    "default": "both"
                },
                "run_fcs_adaptor": {
                    "type": "string",
                    "description": "Run fcs_adaptor jobs on assebmlies",
                    "enum": ["genomic", "organellar", "both", "off"],
                    "default": "both"
                },
                "run_vecscreen": {
                    "type": "string",
                    "description": "Run vecscreen jobs on assebmlies",
                    "enum": ["genomic", "organellar", "both", "off"],
                    "default": "both"
                },
                "run_btk_busco": {
                    "type": "string",
                    "description": "Run btk_busco jobs on assebmlies",
                    "enum": ["genomic", "both", "off"],
                    "default": "genomic"
                },
                "run_pacbio_barcodes": {
                    "type": "string",
                    "description": "Run pacbio_barcodes jobs on assebmlies",
                    "enum": ["genomic", "organellar", "both", "off"],
                    "default": "both"
                },
                "run_organellar_blast": {
                    "type": "string",
                    "description": "Run organellar_blast jobs on assebmlies",
                    "enum": ["genomic", "both", "off"],
                    "default": "genomic"
                },
                "run_autofilter_assembly": {
                    "type": "string",
                    "description": "Run autofilter_assembly jobs on assebmlies",
                    "enum": ["genomic", "both", "off"],
                    "default": "genomic"
                },
                "run_create_btk_dataset": {
                    "type": "string",
                    "description": "Run create_btk_dataset jobs on assebmlies",
                    "enum": ["genomic", "organellar", "both", "off"],
                    "default": "both"
                },
                "run_merge_datasets": {
                    "type": "string",
                    "description": "Run merge_datasets jobs on assebmlies",
                    "enum": ["genomic", "both", "off"],
                    "default": "genomic"
                },
                "btk_busco_run_mode": {
                    "type": "string",
                    "description": "Should btk be run as mandatory or conditional on levels of contamination.",
                    "fa_icon": "fas fa-file-lines",
                    "enum": ["mandatory", "conditional"],
                    "default": "conditional"
                },
                "genomic_only": {
                    "type": "boolean",
                    "description": "Switch off the organellar workflow",
                    "fa_icon": "fas fa-file-lines",
                    "default": false
                },
                "fcs_override": {
                    "type": "boolean",
                    "description": "Use provided fcs sampleshet",
                    "fa_icon": "fas fa-file-lines",
                    "default": false
                },
                "fcs_override_samplesheet": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "schema": "assets/fcs_schema_input.json",
                    "mimetype": "text/csv",
                    "description": "Override the internal FCS and provide your own. READ THE DOCS TO MAKE SURE IT IS GENERATED CORRECTLY.",
                    "fa_icon": "fas fa-file-lines"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "https://raw.githubusercontent.com/nf-core/test-datasets/",
                    "hidden": true
                },
                "trace_report_suffix": {
                    "type": "string",
                    "fa_icon": "far calendar",
                    "description": "Suffix to add to the trace report filename. Default is the date and time in the format yyyy-MM-dd_HH-mm-ss.",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/input_output_options"
        },
        {
            "$ref": "#/$defs/institutional_config_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        }
    ]
}
